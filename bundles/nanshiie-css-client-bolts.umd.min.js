!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common/http"),require("rxjs/operators"),require("@polpware/ngx-appkit-contracts-alpha"),require("@fortawesome/free-solid-svg-icons"),require("@angular/common"),require("@fortawesome/angular-fontawesome")):"function"==typeof define&&define.amd?define("@nanshiie/css-client-bolts",["exports","@angular/core","@angular/forms","@angular/common/http","rxjs/operators","@polpware/ngx-appkit-contracts-alpha","@fortawesome/free-solid-svg-icons","@angular/common","@fortawesome/angular-fontawesome"],t):t(((e=e||self).nanshiie=e.nanshiie||{},e.nanshiie["css-client-bolts"]={}),e.ng.core,e.ng.forms,e.ng.common.http,e.rxjs.operators,e.ngxAppkitContractsAlpha,e.freeSolidSvgIcons,e.ng.common,e.angularFontawesome)}(this,(function(e,t,r,n,i,o,s,a,l){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function c(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{l(n.next(e))}catch(e){o(e)}}function a(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){e.done?i(e.value):new r((function(t){t(e.value)})).then(s,a)}l((n=n.apply(e,t||[])).next())}))}function u(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}function d(e,t){var r={};return["ipV4","host","protocol","port","deviceName","deviceArch","capacity","threshold","apiKey","status","discoverEndpoint"].forEach((function(n){t[n]!==e[n]&&(r[n]=t[n])})),r}var p=function(){function e(){}return Object.defineProperty(e.prototype,"dsmSettingsPath",{get:function(){return this._dsmSettingsPath},set:function(e){this._dsmSettingsPath=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsuLookupPath",{get:function(){return this._dsuLookupPath},set:function(e){this._dsuLookupPath=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsuRegistarPath",{get:function(){return this._dsuRegistarPath},set:function(e){this._dsuRegistarPath=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsuUpdatePath",{get:function(){return this._dsuUpdatePath},set:function(e){this._dsuUpdatePath=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsuUndoRegisterPath",{get:function(){return this._dsuUndoRegisterPath},set:function(e){this._dsuUndoRegisterPath=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsmServerUrl",{get:function(){return this._dsmServerUrl},set:function(e){this._dsmServerUrl=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsmServerApiKey4DSU",{get:function(){return this._dsmServerApiKey4DSU},set:function(e){this._dsmServerApiKey4DSU=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsmServerApiKey4DSP",{get:function(){return this._dsmServerApiKey4DSP},set:function(e){this._dsmServerApiKey4DSP=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dsmServerApiKey4DSM",{get:function(){return this._dsmServerApiKey4DSM},set:function(e){this._dsmServerApiKey4DSM=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"discoverDSMEndpoint",{get:function(){return"api/discover"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pingDSMEndpoint4DSU",{get:function(){return this._pintDSMFromDSU},set:function(e){this._pintDSMFromDSU=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pingDSMEndpoint4DSP",{get:function(){return this._pintDSMFromDSP},set:function(e){this._pintDSMFromDSP=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pingDSMEndpoint4DSM",{get:function(){return this._pintDSMFromDSM},set:function(e){this._pintDSMFromDSM=e},enumerable:!0,configurable:!0}),e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}();var f=function(){function e(e,t){this._httpClient=e,this._runtimeConfiguration=t}return e.prototype.readAsync=function(e){return void 0===e&&(e=!0),c(this,void 0,void 0,(function(){var t=this;return u(this,(function(r){switch(r.label){case 0:return e&&this._cached?[2,this._cached]:[4,this._httpClient.get(this._runtimeConfiguration.dsmSettingsPath).pipe(i.tap((function(e){e&&e.serverApiKey&&e.serverUrl&&(t._cached=e,t._runtimeConfiguration.dsmServerUrl=e.serverUrl,t._runtimeConfiguration.dsmServerApiKey4DSU=e.serverApiKey)}))).toPromise()];case 1:return[2,r.sent()]}}))}))},e.prototype.writeAsync=function(e){return c(this,void 0,void 0,(function(){var t=this;return u(this,(function(r){switch(r.label){case 0:return[4,this._httpClient.post(this._runtimeConfiguration.dsmSettingsPath,e).pipe(i.tap((function(r){t._cached=e,t._runtimeConfiguration.dsmServerUrl=e.serverUrl,t._runtimeConfiguration.dsmServerApiKey4DSU=e.serverApiKey}))).toPromise()];case 1:return[2,r.sent()]}}))}))},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:n.HttpClient},{type:p}]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e(t.ɵɵinject(n.HttpClient),t.ɵɵinject(p))},token:e,providedIn:"root"}),e}();var h=function(){function e(e,t){this._httpClient=e,this._configuration=t}return e.prototype.discoverEndpoints=function(e){return c(this,void 0,void 0,(function(){var t=this;return u(this,(function(r){switch(r.label){case 0:return[4,this._httpClient.get(e+"/"+this._configuration.discoverDSMEndpoint).pipe(i.tap((function(e){e.pingFromDSU&&(t._configuration.pingDSMEndpoint4DSU=e.pingFromDSU),e.pingFromDSP&&(t._configuration.pingDSMEndpoint4DSP=e.pingFromDSP),e.pingFromDSM&&(t._configuration.pingDSMEndpoint4DSM=e.pingFromDSM)}))).toPromise()];case 1:return[2,r.sent()]}}))}))},e.prototype.pingFromDSPAsync=function(e,t){return c(this,void 0,void 0,(function(){return u(this,(function(r){switch(r.label){case 0:return[4,this._httpClient.get(e+"/"+this._configuration.pingDSMEndpoint4DSP,{headers:(new n.HttpHeaders).set("X-Api-Key",t)}).toPromise()];case 1:return[2,r.sent()]}}))}))},e.prototype.pingFromDSUAsync=function(e,t){return c(this,void 0,void 0,(function(){return u(this,(function(r){switch(r.label){case 0:return[4,this._httpClient.get(e+"/"+this._configuration.pingDSMEndpoint4DSU,{headers:(new n.HttpHeaders).set("X-Api-Key",t)}).toPromise()];case 1:return[2,r.sent()]}}))}))},e.prototype.pingFromDSMAsync=function(e,t){return c(this,void 0,void 0,(function(){return u(this,(function(r){switch(r.label){case 0:return[4,this._httpClient.get(e+"/"+this._configuration.pingDSMEndpoint4DSM,{headers:(new n.HttpHeaders).set("X-Api-Key",t)}).toPromise()];case 1:return[2,r.sent()]}}))}))},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:n.HttpClient},{type:p}]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e(t.ɵɵinject(n.HttpClient),t.ɵɵinject(p))},token:e,providedIn:"root"}),e}();var m=function(){function e(e,t,n,i,o){this._rwService=e,this._utilitiesService=t,this.steps=[],this._alertService=n.get(),this.translator=i.get(),this.form=o.group({serverUrl:new r.FormControl("",{validators:[r.Validators.required]}),serverApiKey:new r.FormControl("",{validators:[r.Validators.required]})})}return Object.defineProperty(e.prototype,"serverUrl",{get:function(){return this.form.get("serverUrl")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"serverApiKey",{get:function(){return this.form.get("serverApiKey")},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this._rwService.readAsync().then((function(t){t.serverUrl&&t.serverApiKey&&(e.form.setValue(t),e.form.disable())}))},e.prototype.enable=function(e,t){t.preventDefault(),t.stopPropagation(),e?this.form.enable():(this.form.disable(),this.alertMessage="",this.alertType="",this.steps=[])},e.prototype.preSubmit=function(){return c(this,void 0,void 0,(function(){var e,t;return u(this,(function(r){switch(r.label){case 0:this.passCheck=!1,this.steps=[],this.alertType="alert-info",this.alertMessage="Verifying DSM Information",e=this.serverUrl.value,t=this.serverApiKey.value,r.label=1;case 1:return r.trys.push([1,4,,5]),this.steps.push({action:"Connecting to DSM ...",status:""}),[4,this._utilitiesService.discoverEndpoints(e)];case 2:return r.sent(),this.steps[this.steps.length-1].status="Ok",this.steps.push({action:"Validating API Key ...",status:""}),[4,this._utilitiesService.pingFromDSUAsync(e,t)];case 3:return r.sent(),this.steps[this.steps.length-1].status="Ok",this.passCheck=!0,this.alertType="alert-success",[3,5];case 4:return r.sent(),this.steps[this.steps.length-1].status="Error",this.alertType="alert-danger",this.alertMessage="Fail to verify DSM information!",[3,5];case 5:return[2]}}))}))},e.prototype.submit=function(){var e=this;this.alertType="alert-info",this.alertMessage="Submitting ...",this._rwService.writeAsync(this.form.value).then((function(t){e.alertType="alert-success",e.alertMessage="Just updated successfully.",e.form.disable(),e._alertService.showMessage("DSM Settings Updated","You just updated DSM Settings!",o.MessageSeverity.success)}),(function(t){e.alertType="alert-danger",e.alertMessage="Something went wrong!"}))},e.decorators=[{type:t.Component,args:[{selector:"css-dsm-settings-form",template:'<form [formGroup]="form" (ngSubmit)="submit()">\n    <div class="form-group">\n        <label for="serverUrl">DSM Server URL</label>\n        <input formControlName="serverUrl" required \n            type="text" class="form-control" id="serverUrl" aria-describedby="serverUrlHelper">\n        <small id="serverUrlHelper" class="form-text text-muted">\n            A DSM URL like <strong>https://dsm.cloudbodyguard.com</strong>\n        </small>\n        <div *ngIf="serverUrl.invalid && (serverUrl.dirty || serverUrl.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="serverUrl.errors.required">\n                Server URL is required.\n            </div>\n        </div>        \n    </div>\n    <div class="form-group">\n        <label for="serverApiKey">DSM Server API Key</label>\n        <input formControlName="serverApiKey" required\n               type="text" class="form-control" id="serverApiKey" aria-describedby="serverApiKeyHelper">\n        <small id="serverApiKeyHelper" class="form-text text-muted">\n            Please consult with DSM administrator for this value.\n        </small>\n        <div *ngIf="serverApiKey.invalid && (serverApiKey.dirty || serverApiKey.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="serverApiKey.errors.required">\n                Server API Key is required.\n            </div>\n        </div>        \n    </div>\n    <div class="alert" [ngClass]="alertType">\n        <h6>{{alertMessage}}</h6>\n        <ol>\n            <li *ngFor="let m of steps">\n                <span>{{m.action}}</span>\n                <strong class="ml-2">{{m.status}}</strong>\n            </li>\n        </ol>\n    </div>\n    <div class="d-flex flex-row justify-content-start">\n        <button *ngIf="form.disabled; else submitTmpl"\n                type="button" class="btn btn-primary px-4" (click)="enable(true, $event)">Edit</button>\n        <ng-template #submitTmpl>\n            <button type="button" class="btn btn-warning px-4" [disabled]="form.invalid || passCheck" (click)="preSubmit()">Verify</button>            \n            <button type="submit" class="ml-2 btn btn-primary px-4" [disabled]="form.invalid || !passCheck">Submit</button>\n            <button type="button" class="ml-2 px-4 btn btn-secondary" (click)="enable(false, $event)">Cancel</button>        \n        </ng-template>\n    </div>\n</form>\n\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:f},{type:h},{type:o.AlertServiceAbstractProvider},{type:o.TranslationServiceAbstractProvider},{type:r.FormBuilder}]},e}();var v=function(){function e(e,t){this._httpClient=e,this._runtimeConfiguration=t}return e.prototype.getByUniqueIdAsync=function(e){return c(this,void 0,void 0,(function(){var t;return u(this,(function(r){switch(r.label){case 0:return t=this._runtimeConfiguration.dsmServerUrl+this._runtimeConfiguration.dsuLookupPath+"/"+e,[4,this._httpClient.get(t).toPromise()];case 1:return[2,r.sent()]}}))}))},e.prototype.registerAsync=function(e){return c(this,void 0,void 0,(function(){var t;return u(this,(function(r){switch(r.label){case 0:return t=this._runtimeConfiguration.dsmServerUrl+this._runtimeConfiguration.dsuRegistarPath,[4,this._httpClient.post(t,e,{headers:new n.HttpHeaders({"Content-Type":"application/json"})}).toPromise()];case 1:return[2,r.sent()]}}))}))},e.prototype.updateByUniqueIdAsync=function(e,t){return c(this,void 0,void 0,(function(){var r,i;return u(this,(function(o){switch(o.label){case 0:return r=Object.keys(t).map((function(e){return{op:"add",path:"/"+e,value:t[e]}})),i=this._runtimeConfiguration.dsmServerUrl+this._runtimeConfiguration.dsuUpdatePath+"/"+e,[4,this._httpClient.patch(i,r,{headers:new n.HttpHeaders({"Content-Type":"application/json"})}).toPromise()];case 1:return[2,o.sent()]}}))}))},e.prototype.undoRegisterByEntityIdAsync=function(e){return c(this,void 0,void 0,(function(){var t;return u(this,(function(r){switch(r.label){case 0:return t=this._runtimeConfiguration.dsmServerUrl+this._runtimeConfiguration.dsuUndoRegisterPath+"/"+e,[4,this._httpClient.delete(t).toPromise()];case 1:return[2,r.sent()]}}))}))},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:n.HttpClient},{type:p}]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e(t.ɵɵinject(n.HttpClient),t.ɵɵinject(p))},token:e,providedIn:"root"}),e}();var g=function(){function e(e,t,n,i){this._dsuRegistar=e,this.faSpinner=s.faSpinner,this.ipAddresses=[],this.deviceArchOptions=[{value:0,text:"Unknown"},{value:10,text:"Windows"},{value:20,text:"Mac"},{value:30,text:"Linux"},{value:40,text:" Unix"}],this.statusOptions=[{value:0,text:"Init"},{value:10,text:"Ready"},{value:20,text:"Offline"},{value:30,text:"Failure"},{value:100,text:"Unknown"}],this.protocolOptions=[{value:0,text:"HTTP"},{value:10,text:"HTTPS"},{value:20,text:"FTP"}],this._alertService=t.get(),this.translator=n.get(),this.form=i.group({deviceUniqueId:new r.FormControl({value:"",disabled:!0},{validators:[r.Validators.required]}),ipV4:new r.FormControl(""),host:new r.FormControl("",{validators:[r.Validators.required]}),protocol:new r.FormControl({value:-1,disabled:!0},{validators:[r.Validators.required]}),port:new r.FormControl({value:0,disabled:!0},{validators:[r.Validators.required]}),deviceName:new r.FormControl("",{validators:[r.Validators.required]}),deviceArch:new r.FormControl({value:-1,disabled:!0},{validators:[r.Validators.required]}),capacity:new r.FormControl(0,{validators:[r.Validators.required]}),threshold:new r.FormControl(0,{validators:[r.Validators.required]}),apiKey:new r.FormControl({value:"",disabled:!0},{validators:[r.Validators.required]}),status:new r.FormControl(-1,{validators:[r.Validators.required]}),discoverEndpoint:new r.FormControl("")})}return Object.defineProperty(e.prototype,"deviceUniqueId",{get:function(){return this.form.get("deviceUniqueId")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ipV4",{get:function(){return this.form.get("ipV4")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"host",{get:function(){return this.form.get("host")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"protocol",{get:function(){return this.form.get("protocol")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"port",{get:function(){return this.form.get("port")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"deviceName",{get:function(){return this.form.get("deviceName")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"deviceArch",{get:function(){return this.form.get("deviceArch")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"capacity",{get:function(){return this.form.get("capacity")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"threshold",{get:function(){return this.form.get("threshold")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"apiKey",{get:function(){return this.form.get("apiKey")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"status",{get:function(){return this.form.get("status")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"discoverEndpoint",{get:function(){return this.form.get("discoverEndpoint")},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.onInputChanged()},e.prototype.ngOnChanges=function(){this.onInputChanged()},e.prototype.onInputChanged=function(){var e=this;this.initData&&this.initData.deviceUniqueId?this._dsuRegistar.getByUniqueIdAsync(this.initData.deviceUniqueId).then((function(t){if(console.log(t),t){var r=Object.assign({},e.initData,t);e.ipAddresses=r.ipAddresses,delete r.ipAddresses,delete r.prettyDeviceArch,delete r.prettyProtocol,delete r.prettyStatus,delete r.rank,delete r.usage,e._entityId=r.id,delete r.id,e.form.setValue(r),e.enable(!1,null)}else{r=Object.assign({ipV4:"",host:"",deviceName:"",threshold:0,status:-1,discoverEndpoint:""},e.initData);e.ipAddresses=r.ipAddresses,delete r.ipAddresses,e.form.setValue(r),e.enable(!0,null)}e._prevFormValue=Object.assign({},e.form.value)})):(this._prevFormValue=Object.assign({},this.form.value),this.enable(!1,null))},e.prototype.enable=function(e,t){t&&t.preventDefault(),t&&t.stopPropagation(),e?this.form.enable():this.form.disable()},e.prototype.submit=function(){var e=this.form.value;if(JSON.stringify(this._prevFormValue)!==JSON.stringify(e))if(this._entityId){var t=d(this._prevFormValue,e);Object.keys(t).length>0&&this.update(t)}else this.create()},e.prototype.create=function(){return c(this,void 0,void 0,(function(){var e,t=this;return u(this,(function(r){switch(r.label){case 0:return this.alertType="alert-info",this.alertMessage="Submitting ...",e=Object.assign({},this.form.value,{deviceUniqueId:this.deviceUniqueId.value,protocol:this.protocol.value,port:this.port.value,deviceArch:this.deviceArch.value,apiKey:this.apiKey.value}),this.showSubmitProgress=!0,[4,this._dsuRegistar.registerAsync(e).then((function(e){t._entityId=e,t.showSubmitProgress=!1,t.alertType="alert-success",t.alertMessage="Just registered successfully.",t.form.disable(),t._prevFormValue=Object.assign({},t.form.value),t._alertService.showMessage("DSU registar","You just registered your device!",o.MessageSeverity.success)}),(function(e){t.showSubmitProgress=!1,t.alertType="alert-danger",t.alertMessage="Something went wrong!"}))];case 1:return r.sent(),[2]}}))}))},e.prototype.update=function(e){return c(this,void 0,void 0,(function(){var t=this;return u(this,(function(r){switch(r.label){case 0:return this.alertType="alert-info",this.alertMessage="Submitting ...",this.showSubmitProgress=!0,[4,this._dsuRegistar.updateByUniqueIdAsync(this.deviceUniqueId.value,e).then((function(e){t.showSubmitProgress=!1,t.alertType="alert-success",t.alertMessage="Just updated successfully.",t.form.disable(),t._prevFormValue=Object.assign({},t.form.value),t._alertService.showMessage("DSU registar","You just updated your device!",o.MessageSeverity.success)}),(function(e){t.showSubmitProgress=!1,t.alertType="alert-danger",t.alertMessage="Something went wrong!"}))];case 1:return r.sent(),[2]}}))}))},e.decorators=[{type:t.Component,args:[{selector:"css-dsu-register-form",template:'<form [formGroup]="form" (ngSubmit)="submit()">\n    <div class="form-group">\n        <label for="deviceUniqueId">Unique Device ID</label>\n        <input formControlName="deviceUniqueId" required \n               type="text" class="form-control" id="deviceUniqueId" aria-describedby="deviceUniqueIdHelper">\n        <small id="deviceUniqueIdHelper" class="form-text text-muted">\n            System generated unique ID (cannot be updated) for this device\n        </small>\n    </div>\n    \x3c!-- host --\x3e\n    <div class="form-group">\n        <label for="host">Host</label>\n        <select formControlName="host" required\n                class="form-control" id="host" aria-describedby="hostHelper">\n            <option value="" disabled>Choose the right IP address</option>                                    \n            <option *ngFor="let ip of ipAddresses" [ngValue]="ip">\n                {{ ip }}\n            </option>\n        </select>\n        <small id="hostHelper" class="form-text text-muted">\n            The host address of this device used to access the service on it,\n            such examples as \'http://192.168.1.0\' or \'https://mystorage.com\'\n        </small>\n        <div *ngIf="host.invalid && (host.dirty || host.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="host.errors.required">\n                Host address is required\n            </div>\n        </div>        \n    </div>\n    \x3c!-- ipV4 --\x3e   \n    <div class="form-group">\n        <label for="ipV4">IP Address</label>\n        <input formControlName="ipV4" \n               type="text" class="form-control" id="ipV4" aria-describedby="ipV4Helper">\n        <small id="ipV4Helper" class="form-text text-muted">\n            The IP address of the device\n        </small>\n        <div *ngIf="ipV4.invalid && (ipV4.dirty || ipV4.touched)"\n             class="alert alert-danger">\n        </div>        \n    </div>\n    \x3c!-- protocol --\x3e\n    <div class="form-group">\n        <label for="protocol">Protocol</label>\n        <select formControlName="protocol" required\n                class="form-control" id="protocol" aria-describedby="protocolHelper">\n            <option value="-1" disabled>Choose the right protocol</option>                        \n            <option *ngFor="let o of protocolOptions" [ngValue]="o.value">\n                {{ o.text }}\n            </option>\n        </select>            \n        <small id="protocolHelper" class="form-text text-muted">\n            The protocol of the service on this device, such examples as HTTP, HTTPS, ftp\n        </small>\n        <div *ngIf="protocol.invalid && (protocol.dirty || protocol.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="protocol.errors.required">\n                Protocol is required.\n            </div>\n        </div>        \n    </div>\n    \x3c!-- port --\x3e\n    <div class="form-group">\n        <label for="port">Port number</label>\n        <input formControlName="port" required\n               type="text" class="form-control" id="port" aria-describedby="portHelper">\n        <small id="portHelper" class="form-text text-muted">\n            The port number of the service on this device\n        </small>\n        <div *ngIf="port.invalid && (port.dirty || port.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="port.errors.required">\n                Port number is required\n            </div>\n        </div>        \n    </div>\n    \x3c!-- deviceName --\x3e\n    <div class="form-group">\n        <label for="deviceName">Device Name</label>\n        <input formControlName="deviceName" required\n               type="text" class="form-control" id="deviceName" aria-describedby="deviceNameHelper">\n        <small id="deviceNameHelper" class="form-text text-muted">\n            The descriptive name of this device, not required to be unique\n        </small>\n        <div *ngIf="deviceName.invalid && (deviceName.dirty || deviceName.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="deviceName.errors.required">\n                Device name is required.\n            </div>\n        </div>        \n    </div>\n    \x3c!-- deviceArch --\x3e\n    <div class="form-group">\n        <label for="deviceArch">Device Operating System</label>\n        <select formControlName="deviceArch" required\n                class="form-control" id="deviceArch" aria-describedby="deviceArchHelper">\n            <option value="-1" disabled>Choose the right operating system</option>            \n            <option *ngFor="let o of deviceArchOptions" [ngValue]="o.value">\n                {{ o.text }}\n            </option>\n        </select>            \n        <small id="deviceArchHelper" class="form-text text-muted">\n            The operating system of this device, such examples as Linux, Windows, and so on\n        </small>\n        <div *ngIf="deviceArch.invalid && (deviceArch.dirty || deviceArch.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="deviceArch.errors.required">\n                Device operating system is required.\n            </div>\n        </div>        \n    </div>\n    \x3c!-- capacity --\x3e\n    <div class="form-group">\n        <label for="capacity">Storage Capacity</label>\n        <input formControlName="capacity" required\n               type="text" class="form-control" id="capacity" aria-describedby="capacityHelper">\n        <small id="capacityHelper" class="form-text text-muted">\n            The allowed storage capacity, in Gigabit, on this device\n        </small>\n        <div *ngIf="capacity.invalid && (capacity.dirty || capacity.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="capacity.errors.required">\n                Storage capacity is required.\n            </div>\n        </div>        \n    </div>\n    \x3c!-- threshold --\x3e\n    <div class="form-group">\n        <label for="threshold">Storage Threshold</label>\n        <input formControlName="threshold" required\n               type="text" class="form-control" id="threshold" aria-describedby="thresholdHelper">\n        <small id="thresholdHelper" class="form-text text-muted">\n            The threshold for the usage of the storage space on this device\n        </small>\n        <div *ngIf="threshold.invalid && (threshold.dirty || threshold.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="threshold.errors.required">\n                Storage threshold is required.\n            </div>\n        </div>        \n    </div>\n    \x3c!-- apiKey --\x3e\n    <div class="form-group">\n        <label for="apiKey">API Key</label>\n        <input formControlName="apiKey" required\n               type="text" class="form-control" id="apiKey" aria-describedby="apiKeyHelper">\n        <small id="apiKeyHelper" class="form-text text-muted">\n            The authorized API Key of this device, used to access the service on it\n        </small>\n        <div *ngIf="apiKey.invalid && (apiKey.dirty || apiKey.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="apiKey.errors.required">\n                API Key is required.\n            </div>\n        </div>        \n    </div>\n    \x3c!-- status --\x3e\n    <div class="form-group">\n        <label for="status">Status</label>\n        <select formControlName="status" required\n                class="form-control" id="status" aria-describedby="statusHelper">\n            <option value="-1" disabled>Choose the right status</option>\n            <option *ngFor="let o of statusOptions" [ngValue]="o.value">\n                {{ o.text }}\n            </option>\n        </select>            \n        <small id="statusHelper" class="form-text text-muted">\n            The storage status of this device\n        </small>\n        <div *ngIf="status.invalid && (status.dirty || status.touched)"\n             class="alert alert-danger">\n\n            <div *ngIf="status.errors.required">\n                Storage status is required.\n            </div>\n        </div>        \n    </div>\n    \x3c!-- discoverEndpoint --\x3e\n    <div class="form-group">\n        <label for="discoverEndpoint">Discover Endpoint</label>\n        <input formControlName="discoverEndpoint" \n               type="text" class="form-control" id="discoverEndpoint" aria-describedby="discoverEndpointHelper">\n        <small id="discoverEndpointHelper" class="form-text text-muted">\n            The discover endpoint for the service on this device\n        </small>\n        <div *ngIf="discoverEndpoint.invalid && (discoverEndpoint.dirty || discoverEndpoint.touched)"\n             class="alert alert-danger">\n\n        </div>        \n    </div>\n    \n    <p class="alert" [ngClass]="alertType">\n        {{alertMessage}}\n    </p>\n    <div class="d-flex flex-row justify-content-start">\n        <button *ngIf="form.disabled; else submitTmpl"\n                type="button" class="btn btn-primary px-4" (click)="enable(true, $event)">Edit</button>\n        <ng-template #submitTmpl>\n            <button type="submit" class="btn btn-primary px-4" [disabled]="form.invalid">\n                <fa-icon class="fa-spin mr-2" [icon]="faSpinner" *ngIf="showSubmitProgress"></fa-icon>\n                Submit\n            </button>\n            <button type="button" class="ml-2 px-4 btn btn-secondary" (click)="enable(false, $event)">Cancel</button>        \n        </ng-template>\n    </div>\n</form>\n\n\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:v},{type:o.AlertServiceAbstractProvider},{type:o.TranslationServiceAbstractProvider},{type:r.FormBuilder}]},e.propDecorators={initData:[{type:t.Input}]},e}();var y=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[m,g],imports:[a.CommonModule,r.FormsModule,r.ReactiveFormsModule,l.FontAwesomeModule],exports:[m,g]}]}],e}();e.CssClientBoltsModule=y,e.DsmSettingsFormComponent=m,e.DsmSettingsRWService=f,e.DsmUtilitiesService=h,e.DsuRegistarService=v,e.DsuRegisterFormComponent=g,e.RuntimeConfiguration=p,e.calculateDsuSpecChanges=d,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=nanshiie-css-client-bolts.umd.min.js.map