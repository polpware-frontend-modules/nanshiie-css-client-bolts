{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@nanshiie/css-client-bolts/lib/models/dsu-spec.model.ts","ng://@nanshiie/css-client-bolts/lib/services/runtime-configuration.ts","ng://@nanshiie/css-client-bolts/lib/services/dsm-settings-rw.service.ts","ng://@nanshiie/css-client-bolts/lib/services/dsm-utilities.service.ts","ng://@nanshiie/css-client-bolts/lib/components/dsm-settings/dsm-settings-form.component.ts","ng://@nanshiie/css-client-bolts/lib/services/dsu-registar.service.ts","ng://@nanshiie/css-client-bolts/lib/components/dsu-register/dsu-register-form.component.ts","ng://@nanshiie/css-client-bolts/lib/services/host-reserved-disk-rw.service.ts","ng://@nanshiie/css-client-bolts/lib/components/host-reserved-disk-form/host-reserved-disk-form.component.ts","ng://@nanshiie/css-client-bolts/lib/css-client-bolts.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","calculateDsuSpecChanges","oldSpec","newSpec","ret","forEach","RuntimeConfiguration","Object","defineProperty","prototype","_dsmSettingsPath","_dsuLookupPath","_dsuRegistarPath","_dsuUpdatePath","_dsuUndoRegisterPath","_dsmServerUrl","_dsmServerApiKey4DSU","_dsmServerApiKey4DSP","_dsmServerApiKey4DSM","_pingDSMFromDSU","_pingDSMFromDSP","_pingDSMFromDSM","_hostReservedDiskSettingPath","Injectable","args","providedIn","DsmSettingsRWService","_httpClient","_runtimeConfiguration","readAsync","checkCache","_cached","get","dsmSettingsPath","pipe","tap","a","serverApiKey","serverUrl","_this","dsmServerUrl","dsmServerApiKey4DSU","toPromise","_a","writeAsync","data","post","HttpClient","DsmUtilitiesService","_configuration","discoverEndpoints","discoverDSMEndpoint","pingFromDSU","pingDSMEndpoint4DSU","pingFromDSP","pingDSMEndpoint4DSP","pingFromDSM","pingDSMEndpoint4DSM","pingFromDSPAsync","apiKey","headers","HttpHeaders","set","pingFromDSUAsync","pingFromDSMAsync","DsmSettingsFormComponent","_rwService","_utilitiesService","alertServiceProvider","translateServiceProvicer","formBuilder","steps","_alertService","translator","form","group","FormControl","validators","Validators","required","ngOnInit","setValue","disable","enable","flag","evt","preventDefault","stopPropagation","alertMessage","alertType","preSubmit","passCheck","newServerUrl","newServerApiKey","action","status","_b","submit","showMessage","MessageSeverity","success","Component","selector","template","AlertServiceAbstractProvider","TranslationServiceAbstractProvider","FormBuilder","DsuRegistarService","getByUniqueIdAsync","deviceUniqueId","url","dsuLookupPath","registerAsync","dsuRegistarPath","Content-Type","updateByUniqueIdAsync","patchData","keys","map","k","path","dsuUpdatePath","patch","undoRegisterByEntityIdAsync","entityId","dsuUndoRegisterPath","delete","DsuRegisterFormComponent","_dsuRegistar","faSpinner","ipAddresses","deviceArchOptions","text","statusOptions","protocolOptions","disabled","ipV4","host","protocol","port","deviceName","deviceArch","capacity","threshold","discoverEndpoint","onInputChanged","ngOnChanges","initData","console","log","assign","prettyDeviceArch","prettyProtocol","prettyStatus","rank","usage","_entityId","id","_prevFormValue","currentFormValue","JSON","stringify","changes","update","create","showSubmitProgress","Input","HostReservedDiskRWService","hostReservedDiskSettingPath","storageRootFullPath","HostReservedDiskFormComponent","_diskService","deviceInfo","CssClientBoltsModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","FontAwesomeModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport interface IDsuSpecModel {\n    id: string;\n    deviceUniqueId: string;\n    ipV4?: string;\n    host: string;\n    protocol: number;\n    prettyProtocol?: string;\n    port: number;\n    deviceName: string;\n\n    deviceArch: number;\n    prettyDeviceArch?: string;\n    capacity: number;\n    threshold: number;\n    apiKey: number;\n    rank?: number;\n    status?: number;\n    prettyStatus?: string;\n    usage?: number;\n    discoverEndpoint?: string;\n\n    ipAddresses?: string[];\n}\n\nexport interface IDsuSpecUpdatedModel {\n    ipV4?: string;\n    host?: string;\n    protocol?: number;\n    port?: number;\n    deviceName?: string;\n\n    deviceArch?: number;\n    capacity?: number;\n    threshold?: number;\n    apiKey?: number;\n    status?: number;\n    discoverEndpoint?: string;\n}\n\nexport function calculateDsuSpecChanges(oldSpec: IDsuSpecUpdatedModel, newSpec: IDsuSpecModel): IDsuSpecUpdatedModel {\n    const fields = [\n        'ipV4',\n        'host',\n        'protocol',\n        'port',\n        'deviceName',\n\n        'deviceArch',\n        'capacity',\n        'threshold',\n        'apiKey',\n        'status',\n        'discoverEndpoint'\n    ];\n\n    const ret: IDsuSpecUpdatedModel = {};\n    fields.forEach(f => {\n        if (newSpec[f] !== oldSpec[f]) {\n            ret[f] = newSpec[f];\n        }\n    });\n\n    return ret;\n}\n\n","import { Injectable } from '@angular/core';\n\n// We on purpose use get/set to retrieve values and\n// store values onto corresponding private properties,\n// as these properties may change at run time. We need to\n// lazily decide the values of these properties. \n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RuntimeConfiguration {\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // DSM Settings\n    ////////////////////////////////////////////////////////////////////////////////\n\n    // Url relative path for Read/Write DSM settings on client \n    private _dsmSettingsPath: string\n    get dsmSettingsPath() {\n        return this._dsmSettingsPath;\n    }\n    set dsmSettingsPath(value: string) {\n        this._dsmSettingsPath = value;\n    }\n\n    // dsu registertion\n    private _dsuLookupPath: string\n    get dsuLookupPath() {\n        return this._dsuLookupPath;\n    }\n    set dsuLookupPath(value: string) {\n        this._dsuLookupPath = value;\n    }\n\n    private _dsuRegistarPath: string\n    get dsuRegistarPath() {\n        return this._dsuRegistarPath;\n    }\n    set dsuRegistarPath(value: string) {\n        this._dsuRegistarPath = value;\n    }\n\n    private _dsuUpdatePath: string\n    get dsuUpdatePath() {\n        return this._dsuUpdatePath;\n    }\n    set dsuUpdatePath(value: string) {\n        this._dsuUpdatePath = value;\n    }\n\n    private _dsuUndoRegisterPath: string\n    get dsuUndoRegisterPath() {\n        return this._dsuUndoRegisterPath;\n    }\n    set dsuUndoRegisterPath(value: string) {\n        this._dsuUndoRegisterPath = value;\n    }\n\n    // Settings for DSM\n    private _dsmServerUrl: string;\n    get dsmServerUrl() {\n        return this._dsmServerUrl;\n    }\n    set dsmServerUrl(value: string) {\n        this._dsmServerUrl = value;\n    }\n\n    private _dsmServerApiKey4DSU: string;\n    get dsmServerApiKey4DSU() {\n        return this._dsmServerApiKey4DSU;\n    }\n    set dsmServerApiKey4DSU(value: string) {\n        this._dsmServerApiKey4DSU = value;\n    }\n\n    private _dsmServerApiKey4DSP: string;\n    get dsmServerApiKey4DSP() {\n        return this._dsmServerApiKey4DSP;\n    }\n    set dsmServerApiKey4DSP(value: string) {\n        this._dsmServerApiKey4DSP = value;\n    }\n\n    private _dsmServerApiKey4DSM: string;\n    get dsmServerApiKey4DSM() {\n        return this._dsmServerApiKey4DSM;\n    }\n    set dsmServerApiKey4DSM(value: string) {\n        this._dsmServerApiKey4DSM = value;\n    }\n\n    get discoverDSMEndpoint() {\n        return 'api/discover';\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // Ping\n    ////////////////////////////////////////////////////////////////////////////////\n    private _pingDSMFromDSU: string;\n    get pingDSMEndpoint4DSU() {\n        return this._pingDSMFromDSU;\n    }\n    set pingDSMEndpoint4DSU(value: string) {\n        this._pingDSMFromDSU = value;\n    }\n\n    private _pingDSMFromDSP: string;\n    get pingDSMEndpoint4DSP() {\n        return this._pingDSMFromDSP;\n    }\n    set pingDSMEndpoint4DSP(value: string) {\n        this._pingDSMFromDSP = value;\n    }\n\n    private _pingDSMFromDSM: string;\n    get pingDSMEndpoint4DSM() {\n        return this._pingDSMFromDSM;\n    }\n    set pingDSMEndpoint4DSM(value: string) {\n        this._pingDSMFromDSM = value;\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // Commonality among all kinds of clients\n    ////////////////////////////////////////////////////////////////////////////////\n    private _hostReservedDiskSettingPath: string;\n    get hostReservedDiskSettingPath() {\n        return this._hostReservedDiskSettingPath;\n    }\n    set hostReservedDiskSettingPath(value: string) {\n        this._hostReservedDiskSettingPath = value;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { IDsmSettingsModel } from '../models/dsm-settings.model';\nimport { RuntimeConfiguration } from './runtime-configuration';\n\n/* Read and write dsm settings */\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DsmSettingsRWService {\n\n    private _cached: IDsmSettingsModel;\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _runtimeConfiguration: RuntimeConfiguration) {\n    }\n\n    async readAsync(checkCache: boolean = true) {\n        if (checkCache && this._cached) {\n            return this._cached;\n        }\n\n        return await this._httpClient.get(this._runtimeConfiguration.dsmSettingsPath)\n            .pipe(\n                tap((a: IDsmSettingsModel) => {\n                    if (a && a.serverApiKey && a.serverUrl) {\n                        this._cached = a;\n                        this._runtimeConfiguration.dsmServerUrl = a.serverUrl;\n                        this._runtimeConfiguration.dsmServerApiKey4DSU = a.serverApiKey;\n\n                    }\n                })\n            ).toPromise();\n    }\n\n    async writeAsync(data: IDsmSettingsModel) {\n        return await this._httpClient.post(this._runtimeConfiguration.dsmSettingsPath, data)\n            .pipe(\n                tap(_ => {\n                    this._cached = data;\n                    this._runtimeConfiguration.dsmServerUrl = data.serverUrl;\n                    this._runtimeConfiguration.dsmServerApiKey4DSU = data.serverApiKey;\n                })\n            ).toPromise();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { RuntimeConfiguration } from './runtime-configuration';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DsmUtilitiesService {\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _configuration: RuntimeConfiguration) { }\n\n    async discoverEndpoints(serverUrl: string) {\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.discoverDSMEndpoint)\n            .pipe(\n                tap((a: any) => {\n                    a.pingFromDSU && (this._configuration.pingDSMEndpoint4DSU = a.pingFromDSU);\n                    a.pingFromDSP && (this._configuration.pingDSMEndpoint4DSP = a.pingFromDSP);\n                    a.pingFromDSM && (this._configuration.pingDSMEndpoint4DSM = a.pingFromDSM);\n                })\n            )\n            .toPromise();\n    }\n\n    async pingFromDSPAsync(serverUrl: string, apiKey: string) {\n\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.pingDSMEndpoint4DSP, {\n            headers: new HttpHeaders().set('X-Api-Key', apiKey)\n        }).toPromise();\n    }\n\n    async pingFromDSUAsync(serverUrl: string, apiKey: string) {\n\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.pingDSMEndpoint4DSU, {\n            headers: new HttpHeaders().set('X-Api-Key', apiKey)\n        }).toPromise();\n    }\n\n    async pingFromDSMAsync(serverUrl: string, apiKey: string) {\n\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.pingDSMEndpoint4DSM, {\n            headers: new HttpHeaders().set('X-Api-Key', apiKey)\n        }).toPromise();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport { DsmSettingsRWService } from '../../services/dsm-settings-rw.service';\nimport { DsmUtilitiesService } from '../../services/dsm-utilities.service';\n\nimport {\n    MessageSeverity,\n    AlertServiceAbstractProvider,\n    IAlertServiceContract,\n    ITranslationServiceContract,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\ninterface IStepProgress {\n    action: string;\n    status: string;\n}\n\n@Component({\n    selector: 'css-dsm-settings-form',\n    templateUrl: './dsm-settings-form.component.html',\n    styleUrls: ['./dsm-settings-form.component.scss']\n})\nexport class DsmSettingsFormComponent implements OnInit {\n\n    readonly form: FormGroup;\n    alertMessage: string;\n    alertType: 'alert-info' | 'alert-success' | 'alert-danger' | '';\n\n    passCheck: boolean;\n    steps: Array<IStepProgress> = [];\n\n    private readonly _alertService: IAlertServiceContract;\n    readonly translator: ITranslationServiceContract;\n\n    constructor(private readonly _rwService: DsmSettingsRWService,\n        private readonly _utilitiesService: DsmUtilitiesService,\n        alertServiceProvider: AlertServiceAbstractProvider,\n        translateServiceProvicer: TranslationServiceAbstractProvider,\n        formBuilder: FormBuilder) {\n\n        this._alertService = alertServiceProvider.get();\n        this.translator = translateServiceProvicer.get();\n\n        this.form = formBuilder.group({\n            serverUrl: new FormControl('', { validators: [Validators.required] }),\n            serverApiKey: new FormControl('', { validators: [Validators.required] })\n        });\n    }\n\n    get serverUrl() { return this.form.get('serverUrl'); }\n    get serverApiKey() { return this.form.get('serverApiKey'); }\n\n    ngOnInit() {\n        this._rwService.readAsync()\n            .then(a => {\n                if (a.serverUrl && a.serverApiKey) {\n                    this.form.setValue(a);\n                    // Disable it\n                    this.form.disable();\n                }\n            });\n    }\n\n    enable(flag: boolean, evt: Event) {\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        if (flag) {\n            this.form.enable();\n        } else {\n            this.form.disable();\n            this.alertMessage = '';\n            this.alertType = '';\n            this.steps = [];\n        }\n    }\n\n    async preSubmit() {\n        // Assuming that the values to be submitted are new and valid.\n        // todo: Progress\n        this.passCheck = false;\n        this.steps = [];\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Verifying DSM Information\";\n\n        const newServerUrl = this.serverUrl.value;\n        const newServerApiKey = this.serverApiKey.value;\n\n        try {\n            this.steps.push({ action: 'Connecting to DSM ...', status: '' });\n            const a = await this._utilitiesService.discoverEndpoints(newServerUrl);\n            this.steps[this.steps.length - 1].status = 'Ok';\n\n            this.steps.push({ action: 'Validating API Key ...', status: '' });\n            await this._utilitiesService.pingFromDSUAsync(newServerUrl, newServerApiKey);\n            this.steps[this.steps.length - 1].status = 'Ok';\n\n            this.passCheck = true;\n            this.alertType = 'alert-success';\n        }\n        catch {\n            this.steps[this.steps.length - 1].status = 'Error';\n            this.alertType = 'alert-danger';\n            this.alertMessage = 'Fail to verify DSM information!';\n        }\n    }\n\n    submit() {\n        // Assuming that the values to be submitted are new and valid.\n        // todo: Progress\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n        this._rwService.writeAsync(this.form.value)\n            .then(_ => {\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just updated successfully.\";\n                this.form.disable();\n                this._alertService.showMessage('DSM Settings Updated', 'You just updated DSM Settings!', MessageSeverity.success);\n            }, _ => {\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { RuntimeConfiguration } from './runtime-configuration';\nimport { IDsuSpecModel, IDsuSpecUpdatedModel } from '../models/dsu-spec.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DsuRegistarService {\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _runtimeConfiguration: RuntimeConfiguration) {\n    }\n\n    async getByUniqueIdAsync(deviceUniqueId: string): Promise<IDsuSpecModel> {\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuLookupPath + '/' +\n            deviceUniqueId;\n        return await this._httpClient.get<IDsuSpecModel>(url)\n            .toPromise();\n    }\n\n    async registerAsync(data: IDsuSpecModel) {\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuRegistarPath;\n        return await this._httpClient.post<string>(url, data, {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            })\n        }).toPromise();\n    }\n\n    async updateByUniqueIdAsync(deviceUniqueId: string, data: IDsuSpecUpdatedModel) {\n\n        const patchData = Object.keys(data).map(k => {\n            return {\n                'op': 'add',\n                'path': '/' + k,\n                'value': data[k]\n            };\n        });\n\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuUpdatePath + '/' +\n            deviceUniqueId;\n        return await this._httpClient.patch(url, patchData, {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            })\n        }).toPromise();\n    }\n\n    async undoRegisterByEntityIdAsync(entityId: string) {\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuUndoRegisterPath + '/' + entityId;\n        return await this._httpClient.delete(url)\n            .toPromise();\n    }\n\n\n}\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport {\n    MessageSeverity,\n    AlertServiceAbstractProvider,\n    IAlertServiceContract,\n    ITranslationServiceContract,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport { IDsuSpecModel, calculateDsuSpecChanges, IDsuSpecUpdatedModel } from '../../models/dsu-spec.model';\nimport { DsuRegistarService } from '../../services/dsu-registar.service';\n\n@Component({\n    selector: 'css-dsu-register-form',\n    templateUrl: './dsu-register-form.component.html',\n    styleUrls: ['./dsu-register-form.component.css']\n})\nexport class DsuRegisterFormComponent implements OnInit, OnChanges {\n\n    @Input() initData: IDsuSpecModel;\n\n    faSpinner = faSpinner;\n\n    readonly form: FormGroup;\n    alertMessage: string;\n    alertType: string;\n\n    ipAddresses: string[] = [];\n    deviceArchOptions = [\n        { value: 0, text: 'Unknown' },\n        { value: 10, text: 'Windows' },\n        { value: 20, text: 'Mac' },\n        { value: 30, text: 'Linux' },\n        { value: 40, text: ' Unix' }\n    ];\n\n    statusOptions = [\n        { value: 0, text: 'Init' },\n        { value: 10, text: 'Ready' },\n        { value: 20, text: 'Offline' },\n        { value: 30, text: 'Failure' },\n        { value: 100, text: 'Unknown' }\n    ];\n\n    protocolOptions = [\n        { value: 0, text: 'HTTP' },\n        { value: 10, text: 'HTTPS' },\n        { value: 20, text: 'FTP' }\n    ];\n\n    private readonly _alertService: IAlertServiceContract;\n    readonly translator: ITranslationServiceContract;\n\n    // TODO: use it to control submit button?\n    anyFormChange: boolean;\n    showSubmitProgress: boolean;\n    private _prevFormValue: IDsuSpecModel;\n    private _entityId: string;\n\n    constructor(private readonly _dsuRegistar: DsuRegistarService,\n        alertServiceProvider: AlertServiceAbstractProvider,\n        translateServiceProvicer: TranslationServiceAbstractProvider,\n        formBuilder: FormBuilder) {\n\n        this._alertService = alertServiceProvider.get();\n        this.translator = translateServiceProvicer.get();\n\n        this.form = formBuilder.group({\n            deviceUniqueId: new FormControl({ value: '', disabled: true }, { validators: [Validators.required] }),\n            ipV4: new FormControl(''),\n            host: new FormControl('', { validators: [Validators.required] }),\n            protocol: new FormControl({ value: -1, disabled: true }, { validators: [Validators.required] }),\n            port: new FormControl({ value: 0, disabled: true }, { validators: [Validators.required] }),\n            deviceName: new FormControl('', { validators: [Validators.required] }),\n            deviceArch: new FormControl({ value: -1, disabled: true }, { validators: [Validators.required] }),\n            capacity: new FormControl(0, { validators: [Validators.required] }),\n            threshold: new FormControl(0, { validators: [Validators.required] }),\n            apiKey: new FormControl({ value: '', disabled: true }, { validators: [Validators.required] }),\n            status: new FormControl(-1, { validators: [Validators.required] }),\n            discoverEndpoint: new FormControl('')\n        });\n    }\n\n    get deviceUniqueId() { return this.form.get('deviceUniqueId'); }\n    get ipV4() { return this.form.get('ipV4'); }\n    get host() { return this.form.get('host'); }\n    get protocol() { return this.form.get('protocol'); }\n    get port() { return this.form.get('port'); }\n    get deviceName() { return this.form.get('deviceName'); }\n    get deviceArch() { return this.form.get('deviceArch'); }\n    get capacity() { return this.form.get('capacity'); }\n    get threshold() { return this.form.get('threshold'); }\n    get apiKey() { return this.form.get('apiKey'); }\n    get status() { return this.form.get('status'); }\n    get discoverEndpoint() { return this.form.get('discoverEndpoint'); }\n\n    ngOnInit() {\n        this.onInputChanged();\n    }\n\n    ngOnChanges() {\n        this.onInputChanged();\n    }\n\n    private onInputChanged() {\n        // init data ready\n        if (this.initData && this.initData.deviceUniqueId) {\n            this._dsuRegistar.getByUniqueIdAsync(this.initData.deviceUniqueId)\n                .then(a => {\n\n                    console.log(a);\n\n                    if (a) {\n                        const v = Object.assign({}, this.initData, a);\n                        this.ipAddresses = v.ipAddresses;\n                        delete v.ipAddresses;\n                        delete v.prettyDeviceArch;\n                        delete v.prettyProtocol;\n                        delete v.prettyStatus;\n                        delete v.rank;\n                        delete v.usage;\n\n                        this._entityId = v.id;\n                        delete v.id;\n\n                        this.form.setValue(v);\n                        this.enable(false, null);\n                    } else {\n                        const v = Object.assign({\n                            ipV4: '',\n                            host: '',\n                            deviceName: '',\n                            threshold: 0,\n                            status: -1,\n                            discoverEndpoint: ''\n                        }, this.initData);\n                        this.ipAddresses = v.ipAddresses;\n                        delete v.ipAddresses;\n                        this.form.setValue(v);\n                        this.enable(true, null);\n                    }\n\n                    this._prevFormValue = Object.assign({}, this.form.value);\n                });\n        } else {\n            this._prevFormValue = Object.assign({}, this.form.value);\n            this.enable(false, null);\n        }\n    }\n\n    enable(flag: boolean, evt: Event) {\n        evt && evt.preventDefault();\n        evt && evt.stopPropagation();\n\n        if (flag) {\n            this.form.enable();\n        } else {\n            this.form.disable();\n        }\n    }\n\n    submit() {\n        const currentFormValue = this.form.value;\n        if (JSON.stringify(this._prevFormValue) !== JSON.stringify(currentFormValue)) {\n            if (this._entityId) {\n                const changes = calculateDsuSpecChanges(this._prevFormValue, currentFormValue);\n                if (Object.keys(changes).length > 0) {\n                    this.update(changes);\n                }\n            } else {\n                this.create();\n            }\n        }\n    }\n\n    async create() {\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n\n        const v = Object.assign({}, this.form.value, {\n            deviceUniqueId: this.deviceUniqueId.value,\n            protocol: this.protocol.value,\n            port: this.port.value,\n            deviceArch: this.deviceArch.value,\n            apiKey: this.apiKey.value\n        });\n\n        this.showSubmitProgress = true;\n        await this._dsuRegistar.registerAsync(v)\n            .then(id => {\n                this._entityId = id;\n                // Stop progress\n                this.showSubmitProgress = false;\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just registered successfully.\";\n                this.form.disable();\n                // TODO: should have some id returned.\n                this._prevFormValue = Object.assign({}, this.form.value);\n\n                this._alertService.showMessage('DSU registar', 'You just registered your device!', MessageSeverity.success);\n            }, _ => {\n                // Stop progress                \n                this.showSubmitProgress = false;\n\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n    }\n\n    async update(changes: IDsuSpecUpdatedModel) {\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n\n        // Progress\n        this.showSubmitProgress = true;\n        await this._dsuRegistar.updateByUniqueIdAsync(this.deviceUniqueId.value, changes)\n            .then(_ => {\n                // Stop progress\n                this.showSubmitProgress = false;\n\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just updated successfully.\";\n                this.form.disable();\n                this._prevFormValue = Object.assign({}, this.form.value);\n\n                this._alertService.showMessage('DSU registar', 'You just updated your device!', MessageSeverity.success);\n            }, _ => {\n                // Stop progress\n                this.showSubmitProgress = false;\n\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { RuntimeConfiguration } from './runtime-configuration';\n\nexport interface IHostReservedDiskModel {\n    storageRootFullPath: string;\n    tempDirName?: string;\n    stagedDirName?: string;\n    commitedDirName?: string;\n    availableDrivers?: [{\n        rootDirectory: string;\n        totalSpace: number;\n        freeSpace: number;\n    }]\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HostReservedDiskRWService {\n\n    private _cached: IHostReservedDiskModel;\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _runtimeConfiguration: RuntimeConfiguration) { }\n\n    async readAsync(checkCache: boolean = true) {\n\n        if (checkCache && this._cached) {\n            return this._cached;\n        }\n\n        return await this._httpClient.get(this._runtimeConfiguration.hostReservedDiskSettingPath)\n            .pipe(\n                tap((a: IHostReservedDiskModel) => {\n                    this._cached = a;\n                })\n            ).toPromise();\n    }\n\n    async writeAsync(data: IHostReservedDiskModel) {\n        return await this._httpClient.post(this._runtimeConfiguration.hostReservedDiskSettingPath, data)\n            .pipe(\n                tap(_ => {\n                    this._cached.storageRootFullPath = data.storageRootFullPath;\n                })\n            ).toPromise();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport {\n    MessageSeverity,\n    AlertServiceAbstractProvider,\n    IAlertServiceContract,\n    ITranslationServiceContract,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    HostReservedDiskRWService,\n    IHostReservedDiskModel\n} from '../../services/host-reserved-disk-rw.service';\n\n@Component({\n    selector: 'host-reserved-disk-form',\n    templateUrl: './host-reserved-disk-form.component.html',\n    styleUrls: ['./host-reserved-disk-form.component.scss']\n})\nexport class HostReservedDiskFormComponent implements OnInit {\n\n    readonly form: FormGroup;\n    alertMessage: string;\n    alertType: 'alert-info' | 'alert-success' | 'alert-danger' | '';\n\n    private readonly _alertService: IAlertServiceContract;\n    readonly translator: ITranslationServiceContract;\n\n    public deviceInfo: IHostReservedDiskModel;\n\n    constructor(private readonly _diskService: HostReservedDiskRWService,\n        alertServiceProvider: AlertServiceAbstractProvider,\n        translateServiceProvicer: TranslationServiceAbstractProvider,\n        formBuilder: FormBuilder) {\n\n        this._alertService = alertServiceProvider.get();\n        this.translator = translateServiceProvicer.get();\n\n        this.form = formBuilder.group({\n            storageRootFullPath: new FormControl('', { validators: [Validators.required] })\n        });\n    }\n\n    get storageRootFullPath() { return this.form.get('storageRootFullPath'); }\n\n    ngOnInit() {\n\n        this._diskService.readAsync()\n            .then(a => {\n                this.deviceInfo = a;\n                this.storageRootFullPath.setValue(a.storageRootFullPath);\n                this.enable(false, null);\n            });\n    }\n\n    enable(flag: boolean, evt: Event) {\n        evt && evt.preventDefault();\n        evt && evt.stopPropagation();\n\n        if (flag) {\n            this.form.enable();\n        } else {\n            this.form.disable();\n            this.alertMessage = '';\n            this.alertType = '';\n        }\n    }\n\n    submit() {\n        // Assuming that the values to be submitted are new and valid.\n        // todo: Progress\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n        this._diskService.writeAsync(this.form.value)\n            .then(_ => {\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just updated successfully.\";\n                this.form.disable();\n                this._alertService.showMessage('Storage Space Root', 'You just updated the full path of the storage space root!', MessageSeverity.success);\n            }, _ => {\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport {\n    DsmSettingsFormComponent\n} from './components/dsm-settings/dsm-settings-form.component';\nimport {\n    DsuRegisterFormComponent\n} from './components/dsu-register/dsu-register-form.component';\nimport {\n    HostReservedDiskFormComponent\n} from './components/host-reserved-disk-form/host-reserved-disk-form.component';\n\n\n@NgModule({\n    declarations: [\n        DsmSettingsFormComponent,\n        DsuRegisterFormComponent,\n        HostReservedDiskFormComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FontAwesomeModule\n    ],\n    exports: [\n        DsmSettingsFormComponent,\n        DsuRegisterFormComponent,\n        HostReservedDiskFormComponent\n    ]\n})\nexport class CssClientBoltsModule { }\n"]}