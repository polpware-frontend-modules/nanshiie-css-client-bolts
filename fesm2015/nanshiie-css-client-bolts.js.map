{"version":3,"file":"nanshiie-css-client-bolts.js","sources":["ng://@nanshiie/css-client-bolts/lib/models/dsm-settings.model.ts","ng://@nanshiie/css-client-bolts/lib/models/dsu-spec.model.ts","ng://@nanshiie/css-client-bolts/lib/services/runtime-configuration.ts","ng://@nanshiie/css-client-bolts/lib/services/dsm-settings-rw.service.ts","ng://@nanshiie/css-client-bolts/lib/services/dsm-utilities.service.ts","ng://@nanshiie/css-client-bolts/lib/components/dsm-settings/dsm-settings-form.component.ts","ng://@nanshiie/css-client-bolts/lib/services/dsu-registar.service.ts","ng://@nanshiie/css-client-bolts/lib/components/dsu-register/dsu-register-form.component.ts","ng://@nanshiie/css-client-bolts/lib/services/host-reserved-disk-rw.service.ts","ng://@nanshiie/css-client-bolts/lib/components/host-reserved-disk-form/host-reserved-disk-form.component.ts","ng://@nanshiie/css-client-bolts/lib/css-client-bolts.module.ts"],"sourcesContent":["\nexport interface IDsmSettingsModel {\n    serverUrl: string;\n    serverApiKey: string;\n}\n","\nexport interface IDsuSpecModel {\n    id: string;\n    deviceUniqueId: string;\n    ipV4?: string;\n    host: string;\n    protocol: number;\n    prettyProtocol?: string;\n    port: number;\n    deviceName: string;\n\n    deviceArch: number;\n    prettyDeviceArch?: string;\n    capacity: number;\n    threshold: number;\n    apiKey: number;\n    rank?: number;\n    status?: number;\n    prettyStatus?: string;\n    usage?: number;\n    discoverEndpoint?: string;\n\n    ipAddresses?: string[];\n}\n\nexport interface IDsuSpecUpdatedModel {\n    ipV4?: string;\n    host?: string;\n    protocol?: number;\n    port?: number;\n    deviceName?: string;\n\n    deviceArch?: number;\n    capacity?: number;\n    threshold?: number;\n    apiKey?: number;\n    status?: number;\n    discoverEndpoint?: string;\n}\n\nexport function calculateDsuSpecChanges(oldSpec: IDsuSpecUpdatedModel, newSpec: IDsuSpecModel): IDsuSpecUpdatedModel {\n    const fields = [\n        'ipV4',\n        'host',\n        'protocol',\n        'port',\n        'deviceName',\n\n        'deviceArch',\n        'capacity',\n        'threshold',\n        'apiKey',\n        'status',\n        'discoverEndpoint'\n    ];\n\n    const ret: IDsuSpecUpdatedModel = {};\n    fields.forEach(f => {\n        if (newSpec[f] !== oldSpec[f]) {\n            ret[f] = newSpec[f];\n        }\n    });\n\n    return ret;\n}\n\n","import { Injectable } from '@angular/core';\n\n// We on purpose use get/set to retrieve values and\n// store values onto corresponding private properties,\n// as these properties may change at run time. We need to\n// lazily decide the values of these properties. \n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RuntimeConfiguration {\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // DSM Settings\n    ////////////////////////////////////////////////////////////////////////////////\n\n    // Url relative path for Read/Write DSM settings on client \n    private _dsmSettingsPath: string\n    get dsmSettingsPath() {\n        return this._dsmSettingsPath;\n    }\n    set dsmSettingsPath(value: string) {\n        this._dsmSettingsPath = value;\n    }\n\n    // dsu registertion\n    private _dsuLookupPath: string\n    get dsuLookupPath() {\n        return this._dsuLookupPath;\n    }\n    set dsuLookupPath(value: string) {\n        this._dsuLookupPath = value;\n    }\n\n    private _dsuRegistarPath: string\n    get dsuRegistarPath() {\n        return this._dsuRegistarPath;\n    }\n    set dsuRegistarPath(value: string) {\n        this._dsuRegistarPath = value;\n    }\n\n    private _dsuUpdatePath: string\n    get dsuUpdatePath() {\n        return this._dsuUpdatePath;\n    }\n    set dsuUpdatePath(value: string) {\n        this._dsuUpdatePath = value;\n    }\n\n    private _dsuUndoRegisterPath: string\n    get dsuUndoRegisterPath() {\n        return this._dsuUndoRegisterPath;\n    }\n    set dsuUndoRegisterPath(value: string) {\n        this._dsuUndoRegisterPath = value;\n    }\n\n    // Settings for DSM\n    private _dsmServerUrl: string;\n    get dsmServerUrl() {\n        return this._dsmServerUrl;\n    }\n    set dsmServerUrl(value: string) {\n        this._dsmServerUrl = value;\n    }\n\n    private _dsmServerApiKey4DSU: string;\n    get dsmServerApiKey4DSU() {\n        return this._dsmServerApiKey4DSU;\n    }\n    set dsmServerApiKey4DSU(value: string) {\n        this._dsmServerApiKey4DSU = value;\n    }\n\n    private _dsmServerApiKey4DSP: string;\n    get dsmServerApiKey4DSP() {\n        return this._dsmServerApiKey4DSP;\n    }\n    set dsmServerApiKey4DSP(value: string) {\n        this._dsmServerApiKey4DSP = value;\n    }\n\n    private _dsmServerApiKey4DSM: string;\n    get dsmServerApiKey4DSM() {\n        return this._dsmServerApiKey4DSM;\n    }\n    set dsmServerApiKey4DSM(value: string) {\n        this._dsmServerApiKey4DSM = value;\n    }\n\n    get discoverDSMEndpoint() {\n        return 'api/discover';\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // Ping\n    ////////////////////////////////////////////////////////////////////////////////\n    private _pingDSMFromDSU: string;\n    get pingDSMEndpoint4DSU() {\n        return this._pingDSMFromDSU;\n    }\n    set pingDSMEndpoint4DSU(value: string) {\n        this._pingDSMFromDSU = value;\n    }\n\n    private _pingDSMFromDSP: string;\n    get pingDSMEndpoint4DSP() {\n        return this._pingDSMFromDSP;\n    }\n    set pingDSMEndpoint4DSP(value: string) {\n        this._pingDSMFromDSP = value;\n    }\n\n    private _pingDSMFromDSM: string;\n    get pingDSMEndpoint4DSM() {\n        return this._pingDSMFromDSM;\n    }\n    set pingDSMEndpoint4DSM(value: string) {\n        this._pingDSMFromDSM = value;\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // Commonality among all kinds of clients\n    ////////////////////////////////////////////////////////////////////////////////\n    private _hostReservedDiskSettingPath: string;\n    get hostReservedDiskSettingPath() {\n        return this._hostReservedDiskSettingPath;\n    }\n    set hostReservedDiskSettingPath(value: string) {\n        this._hostReservedDiskSettingPath = value;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { IDsmSettingsModel } from '../models/dsm-settings.model';\nimport { RuntimeConfiguration } from './runtime-configuration';\n\n/* Read and write dsm settings */\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DsmSettingsRWService {\n\n    private _cached: IDsmSettingsModel;\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _runtimeConfiguration: RuntimeConfiguration) {\n    }\n\n    async readAsync(checkCache: boolean = true) {\n        if (checkCache && this._cached) {\n            return this._cached;\n        }\n\n        return await this._httpClient.get(this._runtimeConfiguration.dsmSettingsPath)\n            .pipe(\n                tap((a: IDsmSettingsModel) => {\n                    if (a && a.serverApiKey && a.serverUrl) {\n                        this._cached = a;\n                        this._runtimeConfiguration.dsmServerUrl = a.serverUrl;\n                        this._runtimeConfiguration.dsmServerApiKey4DSU = a.serverApiKey;\n\n                    }\n                })\n            ).toPromise();\n    }\n\n    async writeAsync(data: IDsmSettingsModel) {\n        return await this._httpClient.post(this._runtimeConfiguration.dsmSettingsPath, data)\n            .pipe(\n                tap(_ => {\n                    this._cached = data;\n                    this._runtimeConfiguration.dsmServerUrl = data.serverUrl;\n                    this._runtimeConfiguration.dsmServerApiKey4DSU = data.serverApiKey;\n                })\n            ).toPromise();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { RuntimeConfiguration } from './runtime-configuration';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DsmUtilitiesService {\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _configuration: RuntimeConfiguration) { }\n\n    async discoverEndpoints(serverUrl: string) {\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.discoverDSMEndpoint)\n            .pipe(\n                tap((a: any) => {\n                    a.pingFromDSU && (this._configuration.pingDSMEndpoint4DSU = a.pingFromDSU);\n                    a.pingFromDSP && (this._configuration.pingDSMEndpoint4DSP = a.pingFromDSP);\n                    a.pingFromDSM && (this._configuration.pingDSMEndpoint4DSM = a.pingFromDSM);\n                })\n            )\n            .toPromise();\n    }\n\n    async pingFromDSPAsync(serverUrl: string, apiKey: string) {\n\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.pingDSMEndpoint4DSP, {\n            headers: new HttpHeaders().set('X-Api-Key', apiKey)\n        }).toPromise();\n    }\n\n    async pingFromDSUAsync(serverUrl: string, apiKey: string) {\n\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.pingDSMEndpoint4DSU, {\n            headers: new HttpHeaders().set('X-Api-Key', apiKey)\n        }).toPromise();\n    }\n\n    async pingFromDSMAsync(serverUrl: string, apiKey: string) {\n\n        return await this._httpClient.get(serverUrl + '/' + this._configuration.pingDSMEndpoint4DSM, {\n            headers: new HttpHeaders().set('X-Api-Key', apiKey)\n        }).toPromise();\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport { DsmSettingsRWService } from '../../services/dsm-settings-rw.service';\nimport { DsmUtilitiesService } from '../../services/dsm-utilities.service';\n\nimport {\n    MessageSeverity,\n    AlertServiceAbstractProvider,\n    IAlertServiceContract,\n    ITranslationServiceContract,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\ninterface IStepProgress {\n    action: string;\n    status: string;\n}\n\n@Component({\n    selector: 'css-dsm-settings-form',\n    templateUrl: './dsm-settings-form.component.html',\n    styleUrls: ['./dsm-settings-form.component.scss']\n})\nexport class DsmSettingsFormComponent implements OnInit {\n\n    @Input() deviceUnit: 'dsu' | 'dsm' | 'dsp' = 'dsu';\n    readonly form: FormGroup;\n    alertMessage: string;\n    alertType: 'alert-info' | 'alert-success' | 'alert-danger' | '';\n\n    passCheck: boolean;\n    steps: Array<IStepProgress> = [];\n\n    private readonly _alertService: IAlertServiceContract;\n    readonly translator: ITranslationServiceContract;\n\n    constructor(private readonly _rwService: DsmSettingsRWService,\n        private readonly _utilitiesService: DsmUtilitiesService,\n        alertServiceProvider: AlertServiceAbstractProvider,\n        translateServiceProvicer: TranslationServiceAbstractProvider,\n        formBuilder: FormBuilder) {\n\n        this._alertService = alertServiceProvider.get();\n        this.translator = translateServiceProvicer.get();\n\n        this.form = formBuilder.group({\n            serverUrl: new FormControl('', { validators: [Validators.required] }),\n            serverApiKey: new FormControl('', { validators: [Validators.required] })\n        });\n    }\n\n    get serverUrl() { return this.form.get('serverUrl'); }\n    get serverApiKey() { return this.form.get('serverApiKey'); }\n\n    ngOnInit() {\n        this._rwService.readAsync()\n            .then(a => {\n                if (a.serverUrl && a.serverApiKey) {\n                    this.form.setValue(a);\n                    // Disable it\n                    this.form.disable();\n                }\n            });\n    }\n\n    enable(flag: boolean, evt: Event) {\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        if (flag) {\n            this.form.enable();\n        } else {\n            this.form.disable();\n            this.alertMessage = '';\n            this.alertType = '';\n            this.steps = [];\n        }\n    }\n\n    async preSubmit() {\n        // Assuming that the values to be submitted are new and valid.\n        // todo: Progress\n        this.passCheck = false;\n        this.steps = [];\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Verifying DSM Information\";\n\n        const newServerUrl = this.serverUrl.value;\n        const newServerApiKey = this.serverApiKey.value;\n\n        try {\n            this.steps.push({ action: 'Connecting to DSM ...', status: '' });\n            await this._utilitiesService.discoverEndpoints(newServerUrl);\n            this.steps[this.steps.length - 1].status = 'Ok';\n\n            this.steps.push({ action: 'Validating API Key ...', status: '' });\n            if (this.deviceUnit == 'dsu') {\n                await this._utilitiesService.pingFromDSUAsync(newServerUrl, newServerApiKey);\n            } else if (this.deviceUnit == 'dsp') {\n                await this._utilitiesService.pingFromDSPAsync(newServerUrl, newServerApiKey);\n            } else {\n                await this._utilitiesService.pingFromDSMAsync(newServerUrl, newServerApiKey);\n            }\n\n            this.steps[this.steps.length - 1].status = 'Ok';\n\n            this.passCheck = true;\n            this.alertType = 'alert-success';\n        }\n        catch {\n            this.steps[this.steps.length - 1].status = 'Error';\n            this.alertType = 'alert-danger';\n            this.alertMessage = 'Fail to verify DSM information!';\n        }\n    }\n\n    submit() {\n        // Assuming that the values to be submitted are new and valid.\n        // todo: Progress\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n        this._rwService.writeAsync(this.form.value)\n            .then(_ => {\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just updated successfully.\";\n                this.form.disable();\n                this._alertService.showMessage('DSM Settings Updated', 'You just updated DSM Settings!', MessageSeverity.success);\n            }, _ => {\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { RuntimeConfiguration } from './runtime-configuration';\nimport { IDsuSpecModel, IDsuSpecUpdatedModel } from '../models/dsu-spec.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DsuRegistarService {\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _runtimeConfiguration: RuntimeConfiguration) {\n    }\n\n    async getByUniqueIdAsync(deviceUniqueId: string): Promise<IDsuSpecModel> {\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuLookupPath + '/' +\n            deviceUniqueId;\n        return await this._httpClient.get<IDsuSpecModel>(url)\n            .toPromise();\n    }\n\n    async registerAsync(data: IDsuSpecModel) {\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuRegistarPath;\n        return await this._httpClient.post<string>(url, data, {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            })\n        }).toPromise();\n    }\n\n    async updateByUniqueIdAsync(deviceUniqueId: string, data: IDsuSpecUpdatedModel) {\n\n        const patchData = Object.keys(data).map(k => {\n            return {\n                'op': 'add',\n                'path': '/' + k,\n                'value': data[k]\n            };\n        });\n\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuUpdatePath + '/' +\n            deviceUniqueId;\n        return await this._httpClient.patch(url, patchData, {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            })\n        }).toPromise();\n    }\n\n    async undoRegisterByEntityIdAsync(entityId: string) {\n        const url = this._runtimeConfiguration.dsmServerUrl +\n            this._runtimeConfiguration.dsuUndoRegisterPath + '/' + entityId;\n        return await this._httpClient.delete(url)\n            .toPromise();\n    }\n\n\n}\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport {\n    MessageSeverity,\n    AlertServiceAbstractProvider,\n    IAlertServiceContract,\n    ITranslationServiceContract,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport { IDsuSpecModel, calculateDsuSpecChanges, IDsuSpecUpdatedModel } from '../../models/dsu-spec.model';\nimport { DsuRegistarService } from '../../services/dsu-registar.service';\n\n@Component({\n    selector: 'css-dsu-register-form',\n    templateUrl: './dsu-register-form.component.html',\n    styleUrls: ['./dsu-register-form.component.css']\n})\nexport class DsuRegisterFormComponent implements OnInit, OnChanges {\n\n    @Input() initData: IDsuSpecModel;\n\n    faSpinner = faSpinner;\n\n    readonly form: FormGroup;\n    alertMessage: string;\n    alertType: string;\n\n    ipAddresses: string[] = [];\n    deviceArchOptions = [\n        { value: 0, text: 'Unknown' },\n        { value: 10, text: 'Windows' },\n        { value: 20, text: 'Mac' },\n        { value: 30, text: 'Linux' },\n        { value: 40, text: ' Unix' }\n    ];\n\n    statusOptions = [\n        { value: 0, text: 'Init' },\n        { value: 10, text: 'Ready' },\n        { value: 20, text: 'Offline' },\n        { value: 30, text: 'Failure' },\n        { value: 100, text: 'Unknown' }\n    ];\n\n    protocolOptions = [\n        { value: 0, text: 'HTTP' },\n        { value: 10, text: 'HTTPS' },\n        { value: 20, text: 'FTP' }\n    ];\n\n    private readonly _alertService: IAlertServiceContract;\n    readonly translator: ITranslationServiceContract;\n\n    // TODO: use it to control submit button?\n    anyFormChange: boolean;\n    showSubmitProgress: boolean;\n    private _prevFormValue: IDsuSpecModel;\n    private _entityId: string;\n\n    constructor(private readonly _dsuRegistar: DsuRegistarService,\n        alertServiceProvider: AlertServiceAbstractProvider,\n        translateServiceProvicer: TranslationServiceAbstractProvider,\n        formBuilder: FormBuilder) {\n\n        this._alertService = alertServiceProvider.get();\n        this.translator = translateServiceProvicer.get();\n\n        this.form = formBuilder.group({\n            deviceUniqueId: new FormControl({ value: '', disabled: true }, { validators: [Validators.required] }),\n            ipV4: new FormControl(''),\n            host: new FormControl('', { validators: [Validators.required] }),\n            protocol: new FormControl({ value: -1, disabled: true }, { validators: [Validators.required] }),\n            port: new FormControl({ value: 0, disabled: true }, { validators: [Validators.required] }),\n            deviceName: new FormControl('', { validators: [Validators.required] }),\n            deviceArch: new FormControl({ value: -1, disabled: true }, { validators: [Validators.required] }),\n            capacity: new FormControl(0, { validators: [Validators.required] }),\n            threshold: new FormControl(0, { validators: [Validators.required] }),\n            apiKey: new FormControl({ value: '', disabled: true }, { validators: [Validators.required] }),\n            status: new FormControl(-1, { validators: [Validators.required] }),\n            discoverEndpoint: new FormControl('')\n        });\n    }\n\n    get deviceUniqueId() { return this.form.get('deviceUniqueId'); }\n    get ipV4() { return this.form.get('ipV4'); }\n    get host() { return this.form.get('host'); }\n    get protocol() { return this.form.get('protocol'); }\n    get port() { return this.form.get('port'); }\n    get deviceName() { return this.form.get('deviceName'); }\n    get deviceArch() { return this.form.get('deviceArch'); }\n    get capacity() { return this.form.get('capacity'); }\n    get threshold() { return this.form.get('threshold'); }\n    get apiKey() { return this.form.get('apiKey'); }\n    get status() { return this.form.get('status'); }\n    get discoverEndpoint() { return this.form.get('discoverEndpoint'); }\n\n    ngOnInit() {\n        this.onInputChanged();\n    }\n\n    ngOnChanges() {\n        this.onInputChanged();\n    }\n\n    private onInputChanged() {\n        // init data ready\n        if (this.initData && this.initData.deviceUniqueId) {\n            this._dsuRegistar.getByUniqueIdAsync(this.initData.deviceUniqueId)\n                .then(a => {\n\n                    console.log(a);\n\n                    if (a) {\n                        const v = Object.assign({}, this.initData, a);\n                        this.ipAddresses = v.ipAddresses;\n                        delete v.ipAddresses;\n                        delete v.prettyDeviceArch;\n                        delete v.prettyProtocol;\n                        delete v.prettyStatus;\n                        delete v.rank;\n                        delete v.usage;\n\n                        this._entityId = v.id;\n                        delete v.id;\n\n                        this.form.setValue(v);\n                        this.enable(false, null);\n                    } else {\n                        const v = Object.assign({\n                            ipV4: '',\n                            host: '',\n                            deviceName: '',\n                            threshold: 0,\n                            status: -1,\n                            discoverEndpoint: ''\n                        }, this.initData);\n                        this.ipAddresses = v.ipAddresses;\n                        delete v.ipAddresses;\n                        this.form.setValue(v);\n                        this.enable(true, null);\n                    }\n\n                    this._prevFormValue = Object.assign({}, this.form.value);\n                });\n        } else {\n            this._prevFormValue = Object.assign({}, this.form.value);\n            this.enable(false, null);\n        }\n    }\n\n    enable(flag: boolean, evt: Event) {\n        evt && evt.preventDefault();\n        evt && evt.stopPropagation();\n\n        if (flag) {\n            this.form.enable();\n        } else {\n            this.form.disable();\n        }\n    }\n\n    submit() {\n        const currentFormValue = this.form.value;\n        if (JSON.stringify(this._prevFormValue) !== JSON.stringify(currentFormValue)) {\n            if (this._entityId) {\n                const changes = calculateDsuSpecChanges(this._prevFormValue, currentFormValue);\n                if (Object.keys(changes).length > 0) {\n                    this.update(changes);\n                }\n            } else {\n                this.create();\n            }\n        }\n    }\n\n    async create() {\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n\n        const v = Object.assign({}, this.form.value, {\n            deviceUniqueId: this.deviceUniqueId.value,\n            protocol: this.protocol.value,\n            port: this.port.value,\n            deviceArch: this.deviceArch.value,\n            apiKey: this.apiKey.value\n        });\n\n        this.showSubmitProgress = true;\n        await this._dsuRegistar.registerAsync(v)\n            .then(id => {\n                this._entityId = id;\n                // Stop progress\n                this.showSubmitProgress = false;\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just registered successfully.\";\n                this.form.disable();\n                // TODO: should have some id returned.\n                this._prevFormValue = Object.assign({}, this.form.value);\n\n                this._alertService.showMessage('DSU registar', 'You just registered your device!', MessageSeverity.success);\n            }, _ => {\n                // Stop progress                \n                this.showSubmitProgress = false;\n\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n    }\n\n    async update(changes: IDsuSpecUpdatedModel) {\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n\n        // Progress\n        this.showSubmitProgress = true;\n        await this._dsuRegistar.updateByUniqueIdAsync(this.deviceUniqueId.value, changes)\n            .then(_ => {\n                // Stop progress\n                this.showSubmitProgress = false;\n\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just updated successfully.\";\n                this.form.disable();\n                this._prevFormValue = Object.assign({}, this.form.value);\n\n                this._alertService.showMessage('DSU registar', 'You just updated your device!', MessageSeverity.success);\n            }, _ => {\n                // Stop progress\n                this.showSubmitProgress = false;\n\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { RuntimeConfiguration } from './runtime-configuration';\n\nexport interface IHostReservedDiskModel {\n    storageRootFullPath: string;\n    tempDirName?: string;\n    stagedDirName?: string;\n    commitedDirName?: string;\n    availableDrivers?: [{\n        rootDirectory: string;\n        totalSpace: number;\n        freeSpace: number;\n    }]\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HostReservedDiskRWService {\n\n    private _cached: IHostReservedDiskModel;\n\n    constructor(private readonly _httpClient: HttpClient,\n        private readonly _runtimeConfiguration: RuntimeConfiguration) { }\n\n    async readAsync(checkCache: boolean = true) {\n\n        if (checkCache && this._cached) {\n            return this._cached;\n        }\n\n        return await this._httpClient.get(this._runtimeConfiguration.hostReservedDiskSettingPath)\n            .pipe(\n                tap((a: IHostReservedDiskModel) => {\n                    this._cached = a;\n                })\n            ).toPromise();\n    }\n\n    async writeAsync(data: IHostReservedDiskModel) {\n        return await this._httpClient.post(this._runtimeConfiguration.hostReservedDiskSettingPath, data)\n            .pipe(\n                tap(_ => {\n                    this._cached.storageRootFullPath = data.storageRootFullPath;\n                })\n            ).toPromise();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport {\n    MessageSeverity,\n    AlertServiceAbstractProvider,\n    IAlertServiceContract,\n    ITranslationServiceContract,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    HostReservedDiskRWService,\n    IHostReservedDiskModel\n} from '../../services/host-reserved-disk-rw.service';\n\n@Component({\n    selector: 'host-reserved-disk-form',\n    templateUrl: './host-reserved-disk-form.component.html',\n    styleUrls: ['./host-reserved-disk-form.component.scss']\n})\nexport class HostReservedDiskFormComponent implements OnInit {\n\n    readonly form: FormGroup;\n    alertMessage: string;\n    alertType: 'alert-info' | 'alert-success' | 'alert-danger' | '';\n\n    private readonly _alertService: IAlertServiceContract;\n    readonly translator: ITranslationServiceContract;\n\n    public deviceInfo: IHostReservedDiskModel;\n\n    constructor(private readonly _diskService: HostReservedDiskRWService,\n        alertServiceProvider: AlertServiceAbstractProvider,\n        translateServiceProvicer: TranslationServiceAbstractProvider,\n        formBuilder: FormBuilder) {\n\n        this._alertService = alertServiceProvider.get();\n        this.translator = translateServiceProvicer.get();\n\n        this.form = formBuilder.group({\n            storageRootFullPath: new FormControl('', { validators: [Validators.required] })\n        });\n    }\n\n    get storageRootFullPath() { return this.form.get('storageRootFullPath'); }\n\n    ngOnInit() {\n\n        this._diskService.readAsync()\n            .then(a => {\n                this.deviceInfo = a;\n                this.storageRootFullPath.setValue(a.storageRootFullPath);\n                this.enable(false, null);\n            });\n    }\n\n    enable(flag: boolean, evt: Event) {\n        evt && evt.preventDefault();\n        evt && evt.stopPropagation();\n\n        if (flag) {\n            this.form.enable();\n        } else {\n            this.form.disable();\n            this.alertMessage = '';\n            this.alertType = '';\n        }\n    }\n\n    submit() {\n        // Assuming that the values to be submitted are new and valid.\n        // todo: Progress\n        this.alertType = 'alert-info';\n        this.alertMessage = \"Submitting ...\";\n        this._diskService.writeAsync(this.form.value)\n            .then(_ => {\n                // notify message                \n                this.alertType = 'alert-success';\n                this.alertMessage = \"Just updated successfully.\";\n                this.form.disable();\n                this._alertService.showMessage('Storage Space Root', 'You just updated the full path of the storage space root!', MessageSeverity.success);\n            }, _ => {\n                this.alertType = 'alert-danger';\n                this.alertMessage = 'Something went wrong!';\n            });\n\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport {\n    DsmSettingsFormComponent\n} from './components/dsm-settings/dsm-settings-form.component';\nimport {\n    DsuRegisterFormComponent\n} from './components/dsu-register/dsu-register-form.component';\nimport {\n    HostReservedDiskFormComponent\n} from './components/host-reserved-disk-form/host-reserved-disk-form.component';\n\n\n@NgModule({\n    declarations: [\n        DsmSettingsFormComponent,\n        DsuRegisterFormComponent,\n        HostReservedDiskFormComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FontAwesomeModule\n    ],\n    exports: [\n        DsmSettingsFormComponent,\n        DsuRegisterFormComponent,\n        HostReservedDiskFormComponent\n    ]\n})\nexport class CssClientBoltsModule { }\n"],"names":[],"mappings":"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"}